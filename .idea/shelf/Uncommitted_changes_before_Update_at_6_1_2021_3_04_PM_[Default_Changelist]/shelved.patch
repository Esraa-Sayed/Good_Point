Index: backend/user_account/serializers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework import serializers\r\nfrom rest_framework_simplejwt.tokens import RefreshToken, TokenError\r\nfrom .models import User\r\n\r\n\r\nclass SignupSerializer(serializers.ModelSerializer):\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ['username', 'password', 'first_name', 'phone', 'city', 'birthdate', 'profile_pic']\r\n\r\n    def validate(self, attrs):\r\n        exist_email = User.objects.filter(username=attrs.get('username', '')).exists()\r\n        exist_phone = User.objects.filter(phone=attrs.get('phone', '')).exists()\r\n        if exist_email and exist_phone:\r\n            raise serializers.ValidationError(\r\n                {\r\n                    'error': {\r\n                        'username': 'Email already exists',\r\n                        'phone': 'Phone number already exists'\r\n                    }\r\n                })\r\n        if exist_email:\r\n            raise serializers.ValidationError({'error': {'username': 'Email already exists', 'phone': ''}})\r\n        if exist_phone:\r\n            raise serializers.ValidationError({'error': {'username': '', 'phone': 'Phone number already exists'}})\r\n        return super().validate(attrs)\r\n\r\n    def create(self, validated_data):\r\n        return User.objects.create_user(**validated_data)\r\n\r\n\r\nclass LogoutSerializer(serializers.Serializer):\r\n    token = serializers.CharField()\r\n\r\n    def validate(self, attrs):\r\n        self.token = attrs['refresh']\r\n        return attrs\r\n\r\n    def save(self, **kwargs):\r\n        try:\r\n            RefreshToken(self.token).blacklist()\r\n        except TokenError:\r\n            self.fail('bad_token')\r\n\r\n    def update(self, instance, validated_data):\r\n        pass\r\n\r\n    def create(self, validated_data):\r\n        pass\r\n\r\n\r\nclass WhoFoundItemSerializer(serializers.ModelSerializer):\r\n    name = serializers.CharField(source='first_name')\r\n    email = serializers.CharField(source='username')\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ['name', 'email', 'phone']\r\n\r\n\r\nclass IdCardSerializer(serializers.ModelSerializer):\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ['id_card_pic']\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- backend/user_account/serializers.py	(revision 88dbb4ec1d54690347ac02a4dafdbf9acc71739f)
+++ backend/user_account/serializers.py	(date 1622551582249)
@@ -4,7 +4,7 @@
 
 
 class SignupSerializer(serializers.ModelSerializer):
-
+    
     class Meta:
         model = User
         fields = ['username', 'password', 'first_name', 'phone', 'city', 'birthdate', 'profile_pic']
